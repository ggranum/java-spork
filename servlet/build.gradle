/*
 * This software is licensed under the MIT License.
 *
 * Copyright (c) 2019 Geoff M. Granum
 */

plugins {
    id 'java'
    id 'maven-publish'
}


version = project['project.version']
group = 'com.geoffgranum.spork'

configurations {
    provided
}


dependencies {

    implementation project(":common")
    
    implementation "commons-io:commons-io:${project['versions.commonsIo']}"
    implementation "org.apache.commons:commons-lang3:${project['versions.commonsLang3']}"
    implementation "org.apache.httpcomponents:httpcore:${project['versions.httpcore']}"
    implementation "commons-codec:commons-codec:${project['versions.commonsCodec']}"

    implementation "com.google.guava:guava:${project['versions.guava']}"
    implementation "com.google.code.findbugs:jsr305:${project['versions.findbugs']}"

    implementation "org.apache.logging.log4j:log4j-api:${project['versions.log4j']}"
    runtime "org.apache.logging.log4j:log4j-core:${project['versions.log4j']}"
    runtime "org.apache.logging.log4j:log4j-jcl:${project['versions.log4j']}"

    implementation "com.fasterxml.jackson.core:jackson-databind:${project['versions.jackson']}"
    implementation "org.hibernate:hibernate-validator:${project['versions.hibernateValidator']}"


    implementation  "com.google.inject.extensions:guice-servlet:${project['versions.guice']}"
    implementation ("org.jboss.resteasy:resteasy-jaxrs:${project['versions.resteasy']}")
    implementation  "org.jboss.resteasy:resteasy-jackson2-provider:${project['versions.resteasy']}"
    implementation ("org.jboss.resteasy:resteasy-guice:${project['versions.resteasy']}") {
        exclude module: 'guice'
    }

    implementation ("org.jboss.resteasy:resteasy-client:${project['versions.resteasy']}")
    compileOnly "javax.servlet:javax.servlet-api:3.1.0"



    testImplementation "org.testng:testng:${project['versions.testNg']}"
    testImplementation "org.mockito:mockito-core:${project['versions.mockito']}"
    testImplementation "org.hamcrest:hamcrest-all:${project['versions.hamcrest']}"
}


sourceSets {
    main.compileClasspath += configurations.provided;
    test.compileClasspath += configurations.provided;
    test.runtimeClasspath += configurations.provided;
}
javadoc.classpath = sourceSets.main.compileClasspath;
javadoc.options({
    addStringOption('tag', 'todo')
})

jar {
    baseName = "spork-servlet"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}


publishing {
    publications {
        archives(MavenPublication) {
            artifact jar
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        //        maven {
//            url rootProject["yourRepo.url"]
//            credentials {
//                username = rootProject["yourRepo.username"]
//                password = rootProject["yourRepo.password"]
//            }
//        }
    }
}
